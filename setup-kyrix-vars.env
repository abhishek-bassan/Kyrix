export KYRIX=`printf "%s\n" \`kubectl get pod -o jsonpath="{..metadata.name}"\`|grep kyrix`
export RS_KYRIX=`printf "%s\n" \`kubectl get replicasets -o jsonpath="{..metadata.name}"\`|grep kyrix`
export KYRIX_IP=`kubectl get services -o wide | grep kyrix | awk '{print $4}'`
function kyrix-server(){
    kubectl exec -it $KYRIX -- sh -c "apk add bash emacs"
    kubectl exec -it $KYRIX -- sh -c "${*:-bash}"
}
function tile-server-recompile(){
    # execute from tile-server/
    tar cf - tile-server/src | kubectl exec -it $KYRIX -- sh -c "cd ..; tar xvf -"
    kubectl exec -it $KYRIX -- sh -c 'cd /kyrix/tile-server; mvn -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn compile'
    PID=`kubectl exec -it $KYRIX -- sh -c "ps aux" | grep /usr/bin/java | grep -v grep | awk '{print $1}'`
    if [ "x$PID" = "x" ]; then
        echo "server not running..."
    else
        kubectl exec -it $KYRIX -- sh -c "kill $PID"
    fi
    kubectl exec -it $KYRIX -- sh -c "cd /kyrix/tile-server; PGHOST=master POSTGRES_PASSWORD=kyrixftw USERNAME=kyrix USER_PASSWORD=kyrix_password /wait-for-postgres master:5432 -t 60 -- /start-kyrix.sh" &
    kubectl expose replicaset.apps/$RS_KYRIX --type=LoadBalancer --name=kyrixserver --port=8000 --target-port=8000

}
function recreatedb-kyrix(){
    #PSQL_CONN="postgres://$USERNAME:$USER_PASSWORD@localhost/postgres"
    PG_ENCRYPTION=md5
    USERNAME=kyrix
    USER_PASSWORD=kyrix_password
    DBNAME=kyrix
    source ./setup-citus-vars.env
    echo "dropping active connections..."
    kubectl exec -it $MASTER -- su - postgres -c "psql -c \"SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$DBNAME' AND pid <> pg_backend_pid();\" "
    for w in $CITUS_ALL_NODES; do
	PSQL="PGOPTIONS='--client-min-messages=warning' psql -X -q --pset pager=off"
        echo "recreating database on $w"
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"drop database if exists $DBNAME;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"drop database if exists nba;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"SET password_encryption = '$PG_ENCRYPTION';drop user if exists $USERNAME; create user $USERNAME superuser password '$USER_PASSWORD';\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"create database $DBNAME owner $USERNAME;\""
    done
}
function force-nba-reload(){
    kubectl exec -it $KYRIX -- sh -c "cd /kyrix/compiler/examples/nba; ./force-recompute.sh"
}

